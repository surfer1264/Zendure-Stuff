[
    {
        "id": "479e3443afedb613",
        "type": "tab",
        "label": "Nulleinspeisung",
        "disabled": false,
        "info": "# Einfacher PI Regler\r\nZiel ist Nulleinspeisunf mit Hysterese.\r\nDies bedeutet die Regelung arbeitet nicht absolut auf NULL sondern auf bringt den zu regelnden Wert in einen definierten Regelbereich.\r\n\r\n## Voraussetzungen\r\n - ein Shelly 3EM:` sensor.wohnung_channel_a_power` Dieser Sensor bildet den realen Bezug des Haushalts ab.\r\n - ein Hoymiles WR, dessen Ausgangssignal sich ändern lässt:` number.dtu_leistungsbegrenzung`. Dieser Sensor ist beim Hoymiles ein Prozentwert. 0% entspricht **geschlossen**; 100% entspricht **offen**\r\n\r\n## Initialisierung\r\n Hier werden nur Startwerte gesetzt, die in der Reglerroutine Verwendung finden.\r\n Der wichtigste anzupassende Wert, ist die Leistung des Wechserichters.\r\n\r\nDie Variable `WRLeistung` ist auf den Sollwert des WRs zu setzen.\r\nIch nutze einen HMS-800-2T mit 800W Ausgangsleistung.\r\n\r\nDie Variable `Sollwert` legt die zu regelnde ZIelgröße fest. Hier könnte also auch ein abweichender Wert als NULL definiert werden.\r\nZusmamen mit der Hysterese kann man so Regelbereiche defnieren. (z.B. von -10W..0...10W; oder 0W...10...20W).\r\n\r\nDie Variable `Hysterese` definiert den Regelbereich.\r\nBei einer Hysterese von 10(W) reagiert der Regler nicht, wenn der Sollwert zwischen z.B: +10W und -10W pendelt.\r\n\r\n## Arbeitsweise\r\nDer Flow startet alle drei Sekunden.\r\nEr prüft, ob der Solarflow überhaupt Online ist. (im WLAN: `device_tracker.solarhub` ). Dies ist ein Sensor, den die FritzBox zur Verfügung stellt.\r\nEr prüft, ob überhaupt schon Energie ausgeliefert wird. (`sensor.sf_output_home_power_filtered`). Dies ist ein Sensor des Zendure Solarflows.\r\n\r\nDer Flow ermittelt die Abweichung zum Sollwert.\r\n\r\nDer Sollwert wird umgerechnet auf die prozentuale Abweichung (**Delta**) zur maximalen WR-Leistung.\r\n\r\nBeispiel: Der Shelly3EM meldet einen Bezug von 100W. Dies entspricht einem **Delta** 12,5% der Wechselrichterleistung.\r\n\r\nIm Ergebnis wird der Wechselrichter um diesen Prozentwert **Delta**) beaufschlagt, im vorliegenden Beispiel um 12,5% weiter geöffnet, was eben genau 100W entspricht.\r\nDer hier berechnete Ausgabewert wird natürlich immer auf den Wertebereich 0..100% begrenzt.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "env": []
    },
    {
        "id": "0378d1e9a37ea9e1",
        "type": "group",
        "z": "479e3443afedb613",
        "name": "Konfiguration",
        "style": {
            "label": true
        },
        "nodes": [
            "81141fb3bdeda68b",
            "c8834489133e6e2d",
            "ccf3094869725777",
            "807d99b6b158e42f",
            "0d26d669eec255f1",
            "436cd61c383e13f5",
            "b70ed3aa940ae44f",
            "d38ff4039bfd78e3"
        ],
        "x": 74,
        "y": 39,
        "w": 532,
        "h": 362
    },
    {
        "id": "10ee3e67e420e634",
        "type": "group",
        "z": "479e3443afedb613",
        "name": "PI Regler",
        "style": {
            "label": true
        },
        "nodes": [
            "1",
            "3",
            "4",
            "12b4b149cb437718",
            "aa6c47c92470d76f",
            "8b72519e2008be83"
        ],
        "x": 74,
        "y": 439,
        "w": 1372,
        "h": 142
    },
    {
        "id": "1",
        "type": "inject",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "Alle 3 Sekunden",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "x": 210,
        "y": 480,
        "wires": [
            [
                "aa6c47c92470d76f"
            ]
        ]
    },
    {
        "id": "3",
        "type": "function",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "PI-Regler",
        "func": "// Ziel: 0 W Bezug/Einspeisung\nlet leistung = Number(msg.payload); //vom Shelly3EM\nlet WRmax = flow.get (\"WRLeistung\"); //max. WR Leistung\nlet Soll = flow.get (\"Sollwert\"); //Sollwert\nlet max = flow.get (\"MAXEinspeisung\"); //max. Einspeisung\nlet hyst = flow.get (\"Hysterese\"); // Hysterese-Bereich\n\n//Wie groß ist die Abweichung von NULL?\nlet fehler = flow.get(\"fehler\");\nif (Math.abs(leistung-Soll) > (hyst)) {\n    fehler = Math.round(Soll - leistung);\n    flow.set(\"fehler\", fehler);\n}\nelse {\n    fehler = 0;\n    flow.set(\"fehler\", fehler);\n}\n\n// Regler-Parameter\nconst Kp = 1;\n\n//letzte Einstellung des WR laden\nlet vorher = flow.get(\"letzteBegrenzung\");\n\n// Änderung des Regelsignals berechnen (PI-Regelung) \nlet delta = (Kp * Math.round((fehler)/WRmax*100));\n// Neue WR-Begrenzung berechnen\nlet neu = Math.round(vorher - delta);\n\n// Begrenzung auf gültige Werte zwischen 0% (geschlossen) oder 100% (offen)\nneu = Math.max(0, Math.min(100, neu));\n\n\nflow.set(\"letzteBegrenzung\", neu);\nlet steuer = neu - vorher;\n\n// node.warn({\n//   steuer, \n//   vorher,\n//   neu\n// });\n\nif (steuer != 0){\n  msg.payload = neu;\n return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "4"
            ]
        ]
    },
    {
        "id": "4",
        "type": "api-call-service",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "Setze Begrenzung",
        "server": "homeassistant",
        "version": 7,
        "debugenabled": false,
        "action": "number.set_value",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "number.dtu_leistungsbegrenzung"
        ],
        "labelId": [],
        "data": "{\"value\": \"{{ payload }}\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "blockInputOverrides": false,
        "domain": "number",
        "service": "set_value",
        "target": {
            "entity_id": "number.dtu_leistungsbegrenzung"
        },
        "x": 1330,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "12b4b149cb437718",
        "type": "api-current-state",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "Energiebezug lesen",
        "server": "285afb99.5208c4",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.wohnung_channel_a_power",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 940,
        "y": 540,
        "wires": [
            [
                "3"
            ]
        ]
    },
    {
        "id": "81141fb3bdeda68b",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fehler",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c8834489133e6e2d",
        "type": "inject",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "81141fb3bdeda68b",
                "ccf3094869725777",
                "807d99b6b158e42f",
                "0d26d669eec255f1",
                "436cd61c383e13f5",
                "b70ed3aa940ae44f",
                "d38ff4039bfd78e3"
            ]
        ]
    },
    {
        "id": "ccf3094869725777",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "iSumme",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "807d99b6b158e42f",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "letzteBegrenzung",
                "pt": "flow",
                "to": "40",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0d26d669eec255f1",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "WRLeistung",
                "pt": "flow",
                "to": "800",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "436cd61c383e13f5",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Hysterese",
                "pt": "flow",
                "to": "10",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b70ed3aa940ae44f",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Sollwert",
                "pt": "flow",
                "to": "10",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6c47c92470d76f",
        "type": "api-current-state",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "SolarFlow Online?",
        "server": "285afb99.5208c4",
        "version": 3,
        "outputs": 2,
        "halt_if": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "device_tracker.solarhub",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 450,
        "y": 540,
        "wires": [
            [
                "8b72519e2008be83"
            ],
            []
        ]
    },
    {
        "id": "8b72519e2008be83",
        "type": "api-current-state",
        "z": "479e3443afedb613",
        "g": "10ee3e67e420e634",
        "name": "liefert Energie?",
        "server": "285afb99.5208c4",
        "version": 3,
        "outputs": 2,
        "halt_if": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "entity_id": "sensor.sf_output_home_power_filtered",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 680,
        "y": 540,
        "wires": [
            [
                "12b4b149cb437718"
            ],
            []
        ]
    },
    {
        "id": "d38ff4039bfd78e3",
        "type": "change",
        "z": "479e3443afedb613",
        "g": "0378d1e9a37ea9e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "MAXEinspeisung",
                "pt": "flow",
                "to": "25",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "homeassistant",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    },
    {
        "id": "285afb99.5208c4",
        "type": "server",
        "name": "Home Assistant",
        "addon": true
    }
]
