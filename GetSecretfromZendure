// ============= Anfang Secret =============
// ACHTUNG HUB SERIENNUMMER und EMAIL in ZEILE 42/43 pflegen
// Funktion zur Anfrage an Zendure
function requestZendureAPI(url, snNumber, account, callback) {
  Shelly.call(
    "HTTP.request",
    {
      method: "POST",
      url: url,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        snNumber: snNumber,
        account: account
      })
    },
    function (res, error_code, error_message) {
      if (error_code) {
        print("Fehler bei Anfrage:", url, "-", error_message);
        callback(null);
        return;
      }

      print("Antwort von Zendure (" + url + "):", res.body);

      try {
        let data = JSON.parse(res.body);
        if (data && data.code === 200 && data.success === true) {
          callback(data.data);
        } else {
          print("Unerwartete Antwortstruktur:", res.body);
          callback(null);
        }
      } catch (e) {
        print("Fehler beim Parsen der Antwort:", e);
        callback(null);
      }
    }
  );
}

// Seriennummer & Account hier eintragen:
let SN = "SERIENNUMMER_HUB";
let ACCOUNT = "EMAIL_HUB_ANMELDUNG";

// Beide URLs abfragen
let urls = [
  "https://app.zendure.tech/v2/developer/api/apply",
  "https://app.zendure.tech/eu/developer/api/apply"
];

let results = [];

function checkAllDone() {
  if (results.length === urls.length) {
    print("Alle Anfragen abgeschlossen.");

    // Erfolgreiche Antwort anzeigen
    for (let i = 0; i < results.length; i++) {
      if (results[i]) {
        print("✅ Erfolgreiche Antwort:", JSON.stringify(results[i]));
      }
    }

    // Skript nach den Anfragen stoppen
    print("Skript wird beendet.");
    //Shelly.exit(); // Shelly-Skript sauber beenden
  }
}

// Starte beide Requests
for (let i = 0; i < urls.length; i++) {
  (function (index) {
    requestZendureAPI(urls[index], SN, ACCOUNT, function (data) {
      results[index] = data;
      checkAllDone();
    });
  })(i);
}

// ============= Ende Secret =============
// richtige Antwort von Zendure: 
// {"code":200,"success":true,"data":
// {"appKey":"myAPPKEY","secret":"mySECRET",
// "mqttUrl":"myMQTTURL","port":1883},"msg":"Operation successful"}

//ACHTUNG: Es kommen ggf. mehrere Ergebnisse zurück.
//Relevant ist die Zeile wie in Zeile 82..84 im obigen Script dargestellt.

//Manchmal geben beide Serverregionen gültige Credentials zurück — du bekommst also vielleicht zwei Sätze:
//EU-Key + MQTT-Server für Europa
//Global-Key + MQTT-Server für International

//Du kannst dann einen der beiden verwenden, je nachdem, wo deine Geräte registriert sind.
